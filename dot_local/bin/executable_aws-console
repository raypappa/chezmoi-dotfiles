#!/usr/bin/env python3
import json
from urllib import parse, request
import webbrowser
import argparse
import boto3


def get_credentials():
    creds = boto3.Session().get_credentials()
    return dict(
        sessionId=creds.access_key,
        sessionKey=creds.secret_key,
        sessionToken=creds.token,
    )


def make_get_sign_in_url(base_url, path, params):
    return parse.urlunparse(
        (
            "https",
            base_url,
            path,
            "",
            parse.urlencode(params),
            "",
        )
    )


def get_signin_token(credentials):
    params = {
        "Action": "getSigninToken",
        "DurationSeconds": "43200",
        "Session": parse.quote_plus(json.dumps(credentials)),
    }
    request_url = make_get_sign_in_url("signin.aws.amazon.com", "/federation", params)
    with request.urlopen(request_url) as response:
        if not response.status == 200:
            raise Exception("Failed to get federation token")
        return json.loads(response.read())


def make_sign_in_url(signin_token):
    params = {
        "Action": "login",
        "Destination": parse.quote_plus("https://console.aws.amazon.com/"),
        "SigninToken": signin_token["SigninToken"],
        "Issuer": parse.quote_plus("https://example.com"),
    }
    request_url = parse.urlunparse(
        (
            "https",
            "signin.aws.amazon.com",
            "/federation",
            "",
            parse.urlencode(params),
            "",
        )
    )
    return request_url


def get_url():
    credentials = get_credentials()
    signin_token = get_signin_token(credentials)
    return make_sign_in_url(signin_token)


def parse_args():
    parser = argparse.ArgumentParser(
        description="Open the AWS console in your web browser, using your AWS CLI credentials"
    )
    parser.add_argument(
        "--profile",
        default=None,
        help="the AWS profile to create the presigned URL with",
    )
    parser.add_argument(
        "--stdout",
        action="store_true",
        help="don't open the webbrowser, but echo the signin URL to stdout",
    )

    args = parser.parse_args()
    return args


def main(args=parse_args()):
    request_url = get_url()
    if args.stdout:
        print(request_url)
    else:
        webbrowser.open(request_url)


if __name__ == "__main__":
    main()
